<?php

/**
 * Implementation of hook_init()
 */
function special_module_init() 
{
  drupal_add_library('system', 'jquery.cookie');
}

/**
 * Implementation of hook_block_info()
 */
function special_module_block_info() 
{
  $blocks['special_block1'] = array(
    'info' => t('Special version block'), 	
    'cache' => DRUPAL_CACHE_PER_ROLE,   		
  );
  
  $blocks['special_block2'] = array(
    'info' => t('Normal version block'), 				
    'cache' => DRUPAL_CACHE_PER_ROLE,   		
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view()
 */
function special_module_block_view($delta = '') 
{
  $module_path = drupal_get_path('module', 'special_module');

  $block=array();

  switch($delta){
    case 'special_block1':
      $block['subject'] = t('');																								
      $block['content'] = "<center><a id='special-block' href=#></a><center>";	
	  break;
	 case 'special_block2':
      $block['subject'] = t('');																							
      $block['content'] = "<center><a id='special-normal-block' href=# ></a></center>";
  }

  return $block;
}

/**
 * Alter the system theme settings form to add the special theme settings.
 */
function special_module_form_system_theme_settings_alter(&$form, $form_state, $form_id) {
  // Create the administration settings form on the Global Settings page.
  if ($form['var']['#value'] == 'theme_settings') {
    // Create the fieldset for the special Theme settings.
    $form['special_module'] = array(
      '#type' => 'fieldset',
      '#prefix' => '<div class="theme-settings-right">',
      '#suffix' => '</div>',
      '#title' => t('Special Theme'),
      '#description' => t(''),
      '#weight' => -4,
    );
    $themes = array('default' => t('Default'));
    $options = list_themes();
    foreach ($options as $name => $attr) {
      if ($attr->status) {
        $themes[$name] = $attr->info['name'];
      }
    }
    $form['special_module']['special_module_selection'] = array(
      '#type' => 'select',
      '#title' => '',
      '#description' => t(''),
      '#options' => $themes,
      '#default_value' => variable_get('special_module_selection', 'default'),
    );
    // The submit handler will save the variable.
    $form['#submit'][] = 'special_module_settings_submit';
  }
}

/**
 * Submit handler on the theme settings to save the special theme.
 */
function special_module_settings_submit($form, $form_state) {
  if (isset($form_state['values']['special_module_selection'])) {
    variable_set('special_module_selection', $form_state['values']['special_module_selection']);
  }
  if (isset($form_state['values']['special_module_detection'])) {
    variable_set('special_module_detection', $form_state['values']['special_module_detection']);
  }
}

/**
 * Implementation of hook_custom_theme()
 */
function special_module_custom_theme() {
  if (isset($_COOKIE['special'])) 
  {
	  if ($_COOKIE['special'] == 'on')
		{
	    return variable_get('special_module_selection', 'default');
		}
  }
}